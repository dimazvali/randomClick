
let tg =        window.Telegram.WebApp;
const host =    null
let mcb, mbbc, curLecture, curTicket, curAlert = null;

import {
    Page
} from '/javascripts/classes.js'


const helperTexts = {
    offers: {
        title: `Ваша полка`,
        text: [
            `В этом разделе содержатся книги, которые вы представили публике. Пока что только «на почитать», но уже вы сможете выставить тот  или иной том на продажу.`,
            `Чтобы добавить книгу на полку, нажмите «Добавить книгу». Чтобы сэкономить ваше время, приложение попробует найти ее данные по ISBN. Если такой книги в каталоге еще нет — вы сможете оформить ее полностью.`,
            `Книги отображаются в порядке добавления (от новых к старым). Полупрозрачными становятся те издания, которые в данный момент находятся на руках у других пользователей (или ждут вашего одобрения).`,
            `Порядок выдачи прост: кто-то из пользователей находит вашу в каталоге и отправляет запрос. Бот отправит вам соответствующее сообщение. Если книга у вас на руках – вы подтверждаете запрос. Если что-то пошло не так, у вас есть возможность отказаться. После подтверждения запроса обе стороны получают сообщение с контактами друг друга. Вы связываетесь и договариваетесь об удобном месте и времени. После передачи – подтверждаете, что она состоялась. Наконец, после того, как книга вернется к вам, нажмите соответствующую кнопку — сделка будет закрыта и книга снова станет доступной другим читателям.`,
            `Если что-то пойдет не так, просто напишите боту – администрация свяжется с вами и постарается решить вопрос.`,
        ]
    },
    fresh:{
        title: `Свежие поступления`,
        text: [
            `В этом блоке выставлены книги, которые можно взять почитать в вашем городе (за исключением тех изданий, которые предлагаете вы сами).`,
            `Тома, находящиеся на руках у других читателей, сделаны полупрозрачными. Если они вам интересны, откройте карточку книги и нажмите «Тоже хочу» — мы уведомим вас, когда они освободятся.`,
            `Вы будете получать уведомления о новых книгах, если не отключите их в настройках (или кнопкой, сопровождающей каждое новое сообщение).`
        ]
    }
}


let confirmed = false;

confirmed = axios.post(`/authWebApp?token=userToken`,tg.initData)
    .then(s=>{
        return s.data.admin;
    })


Promise
    .resolve(confirmed)
    .then(admin=>{

        

        tg.requestWriteAccess();

        let data = [];

        data.push(userLoad(`profile`))
        data.push(userLoad(`actions`))        
                
        Promise.all(data).then(data=>{

            console.log({
                profile:    data[0],
                actions:    data[1]
            })


            let pageData = new Page({
                profile:    data[0],
                actions:    data[1]
            },window.Telegram.WebApp,handleError,host,userLoad,drawDate)
            
            ko.applyBindings(pageData,document.querySelector(`#b`))

            document.querySelector(`.popup.coverScreen`).classList.add(`transparent`)

            setTimeout(()=>{    
                document.querySelector(`.popup.coverScreen`).remove();
            },500)
        })
    })
    






